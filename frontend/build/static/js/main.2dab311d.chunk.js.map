{"version":3,"sources":["components/GameInfo.js","components/Timer.js","components/static/sounds/Move.mp3","components/static/sounds/Checkmate.mp3","components/static/sounds/Capture.mp3","components/PgnParser.js","components/Chessboard.js","components/Chat.js","components/Dashboard.js","components/Navbar.js","components/PgnViewer.js","components/static/images/lightchess_logo_blue.png","components/SignIn.js","components/SignUp.js","theme.ts","App.js","index.js"],"names":["GameInfo","props","Container","component","alignItems","CssBaseline","TableContainer","Paper","Table","sx","minWidth","TableBody","TableRow","TableCell","Button","variant","disabled","mySide","turn","color","fontSize","opponentTimeInfo","Typography","opponentUsername","style","overflow","height","width","tableLayout","maxWidth","pgnMoves","map","move","index","whiteMove","blackMove","myUsername","myTimeInfo","Timer","ref","initialMinute","initialSeconds","useState","minutes","setMinutes","seconds","setSeconds","isTicking","setIsTicking","getMinutes","getSeconds","stopTimer","startTimer","useImperativeHandle","useEffect","myInterval","setInterval","clearInterval","forwardRef","parsePgn","pgn","moves","neopgn","split","i","length","Board","useContext","AppContext","socket","userMap","Chess","ChessJS","game","fen","position","setPosition","boardOrientation","setBoardOrientation","setOpponentTimeInfo","setMyTimeInfo","get","id","name","setPgnMoves","useParams","mycolor","myTimer","useRef","opponentTimer","useSound","moveSfx","playMoveSfx","CheckmateSfx","addGame","a","axios","post","process","whiteUsername","blackUsername","winnerUsername","loserUsername","console","log","convertTimeToString","time","time_","toString","on","data","current","isGameOver","gameResult","isCheckmate","inCheck","isDraw","isInsufficientMaterial","isStalemate","isThreefoldRepetition","emit","to","interval","blackTime","opponentTime","off","Grid","container","mt","direction","justifyContent","spacing","item","showBoardNotation","onPieceDrop","sourceSquare","targetSquare","from","result","promotion","sendMove","arePremovesAllowed","clearPremovesOnRightClick","onSquareClick","square","boardWidth","Chat","initSocket","updateUserList","userList","userId","history","useHistory","receiver","setReceiver","myColor","push","yourcolor","Box","noValidate","onSubmit","e","preventDefault","msg","NativeSelect","onChange","selectedIndex","target","options","getAttribute","value","onMouseOver","user","type","Dashboard","setUserId","setName","token","setToken","expire","setExpire","users","setUsers","refreshToken","getUsers","response","accessToken","decoded","jwt_decode","exp","axiosJWT","create","interceptors","request","use","config","currentDate","Date","getTime","headers","Authorization","error","Promise","reject","size","mb","onClick","TableHead","border","email","Navbar","Logout","delete","disconnect","Fragment","AppBar","Toolbar","marginLeft","PgnViewer","uuid","useLayoutEffect","pgnView","timerTime","locale","startPlay","showResult","boardSize","showFen","pieceStyle","resizable","className","Copyright","align","Link","href","getFullYear","SignIn","setEmail","password","setPassword","setMsg","Auth","marginTop","display","flexDirection","src","lightchess_logo_blue","alt","TextField","margin","required","fullWidth","label","autoComplete","autoFocus","xs","SignUp","confPassword","setConfPassword","theme","createTheme","palette","mode","React","createContext","io","autoConnect","args","connected","connect","App","Map","setUserMap","setUserList","Provider","usermap","newUserMap","Object","entries","forEach","key","ThemeProvider","exact","path","defaults","withCredentials","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2dab311d.chunk.js","sourcesContent":["import {\n    Table,\n    Button,\n    Typography,\n    Container,\n    CssBaseline,\n    TableContainer,\n    Paper,\n    TableRow,\n    TableCell,\n    TableBody,\n} from \"@mui/material\"\nimport { blue, yellow, red } from \"@mui/material/colors\"\n\nconst GameInfo = (props) => {\n    return (\n        <Container component=\"main\" alignItems=\"center\">\n            <CssBaseline />\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 300 }}>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                <Button\n                                    variant=\"contained\"\n                                    disabled={props.mySide === props.turn}\n                                    color={\n                                        props.mySide === props.turn\n                                            ? \"primary\"\n                                            : \"success\"\n                                    }\n                                    sx={{ fontSize: 35 }}\n                                >\n                                    {props.opponentTimeInfo}\n                                </Button>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"h5\">\n                                    {props.opponentUsername}\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <div style={{ overflow: \"auto\" }}>\n                                    <div\n                                        style={{\n                                            height: \"150px\",\n                                            width: \"300\",\n                                        }}\n                                    >\n                                        <Table\n                                            sx={{\n                                                tableLayout: \"fixed\",\n                                                maxWidth: 300,\n                                            }}\n                                        >\n                                            <TableBody>\n                                                {props.pgnMoves.map(\n                                                    (move, index) => (\n                                                        <TableRow\n                                                            sx={{\n                                                                height: 5,\n                                                            }}\n                                                        >\n                                                            <TableCell>\n                                                                {index + 1}\n                                                            </TableCell>\n                                                            <TableCell>\n                                                                {move.whiteMove}\n                                                            </TableCell>\n                                                            <TableCell>\n                                                                {move.blackMove}\n                                                            </TableCell>\n                                                        </TableRow>\n                                                    )\n                                                )}\n                                            </TableBody>\n                                        </Table>\n                                    </div>\n                                </div>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant=\"h5\">\n                                    {props.myUsername}\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <Button\n                                    sx={{ fontSize: 35 }}\n                                    disabled={props.mySide !== props.turn}\n                                    color={\n                                        props.mySide === props.turn\n                                            ? \"success\"\n                                            : \"primary\"\n                                    }\n                                    variant=\"contained\"\n                                >\n                                    {props.myTimeInfo}\n                                </Button>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Container>\n    )\n}\n\nexport default GameInfo\n","import React from \"react\"\nimport { useState, useEffect, forwardRef, useImperativeHandle } from \"react\"\n\nfunction Timer(props, ref) {\n    const { initialMinute = 5, initialSeconds = 0 } = props\n    const [minutes, setMinutes] = useState(initialMinute)\n    const [seconds, setSeconds] = useState(initialSeconds)\n    const [isTicking, setIsTicking] = useState(props.isTicking)\n\n    useImperativeHandle(ref, () => ({\n        getMinutes,\n        getSeconds,\n        stopTimer,\n        startTimer,\n    }))\n\n    function getMinutes() {\n        return minutes\n    }\n\n    function getSeconds() {\n        return seconds\n    }\n\n    function stopTimer() {\n        setIsTicking(0)\n    }\n\n    function startTimer() {\n        setIsTicking(1)\n    }\n\n    useEffect(() => {\n        let myInterval = 500\n        if (isTicking) {\n            myInterval = setInterval(() => {\n                if (seconds > 0) {\n                    setSeconds(seconds - 1)\n                }\n                if (seconds === 0) {\n                    if (minutes === 0) {\n                        clearInterval(myInterval)\n                    } else {\n                        setMinutes(minutes - 1)\n                        setSeconds(59)\n                    }\n                }\n            }, 500)\n        }\n\n        return () => {\n            clearInterval(myInterval)\n        }\n    })\n\n    return <></>\n}\n\nexport default forwardRef(Timer)\n","export default __webpack_public_path__ + \"static/media/Move.8d802efe.mp3\";","export default __webpack_public_path__ + \"static/media/Checkmate.39de2c5a.mp3\";","export default __webpack_public_path__ + \"static/media/Capture.bcc979ef.mp3\";","function parsePgn(pgn) {\n    var moves = []\n    const neopgn = pgn.split(\" \")\n    for (let i = 0; i < neopgn.length; i += 3) {\n        if (i + 2 < neopgn.length) {\n            moves[i / 3] = {\n                whiteMove: neopgn[i + 1],\n                blackMove: neopgn[i + 2],\n            }\n        } else {\n            moves[i / 3] = { whiteMove: neopgn[i + 1], blackMove: \"\" }\n        }\n    }\n    return moves\n}\n\n// parsePgn(\"1. e3 e6 2. d4 d6 3. d5 exd5 4. e4 dxe4 5. f3 exf3 6. Nxf3\")\nexport default parsePgn\n","import axios from \"axios\"\nimport * as ChessJS from \"chess.js\"\nimport { useContext, useEffect, useState, useRef } from \"react\"\nimport { useParams } from \"react-router\"\nimport { Chessboard } from \"react-chessboard\"\nimport { AppContext } from \"../App\"\nimport { Grid } from \"@mui/material\"\nimport GameInfo from \"./GameInfo\"\nimport Timer from \"./Timer\"\nimport useSound from \"use-sound\"\nimport moveSfx from \"./../components/static/sounds/Move.mp3\"\nimport captureSfx from \"./../components/static/sounds/Capture.mp3\"\nimport CheckmateSfx from \"./../components/static/sounds/Checkmate.mp3\"\nimport parsePgn from \"./PgnParser\"\n\nfunction Board() {\n    const { socket, userMap } = useContext(AppContext)\n    const Chess = typeof ChessJS === \"function\" ? ChessJS : ChessJS.Chess // For VS code intellisence to work\n    const [game, setGame] = useState(new Chess())\n    const [position, setPosition] = useState(game.fen())\n    const [boardOrientation, setBoardOrientation] = useState(\"white\")\n\n    const [opponentTimeInfo, setOpponentTimeInfo] = useState(\"05:00\")\n    const [myTimeInfo, setMyTimeInfo] = useState(\"05:00\")\n\n    const [myUsername] = useState(userMap.get(socket.id).name)\n    const [pgnMoves, setPgnMoves] = useState([])\n\n    const { id, mycolor } = useParams()\n    const [opponentUsername] = useState(userMap.get(id).name)\n\n    const myTimer = useRef()\n    const opponentTimer = useRef()\n\n    const [playMoveSfx] = useSound(moveSfx)\n    const [playCheckmateSfx] = useSound(CheckmateSfx)\n\n    const addGame = async () => {\n        try {\n            // TODO: set game values properly\n            await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/games`, {\n                whiteUsername: \"dummywhite\",\n                blackUsername: \"dummyblack\",\n                winnerUsername: \"dummywinner\",\n                loserUsername: \"dummyloser\",\n                pgn: game.pgn(),\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        if (mycolor == 1) setBoardOrientation(\"black\")\n\n        socket.on(\"send_move\", (data) => {\n            console.log(data.move)\n            game.move(data.move)\n            setPosition(game.fen())\n\n            // timer\n            myTimer.current.stopTimer()\n            opponentTimer.current.startTimer()\n\n            setPgnMoves(parsePgn(game.pgn()))\n\n            // TODO: checkmate sound does not seem to play\n            // if (game.isGameOver()) {\n            //     playCheckmateSfx()\n            //     console.log(\"checkmate sound played\")\n            // } else {\n            playMoveSfx()\n            // }\n\n            if (game.isGameOver()) {\n                // TODO: create a gameResult to send to opponent\n                var gameResult = \"\"\n                if (game.isCheckmate()) {\n                    if (game.inCheck() && game.turn() === boardOrientation) {\n                        // player lost, opponent won\n                        gameResult += game.turn() + \" lost\"\n                    } else {\n                        const opponent = game.turn() === \"w\" ? \"b\" : \"w\"\n                        gameResult += opponent + \" lost\"\n                    }\n                } else if (game.isDraw()) {\n                    gameResult += \"game drawn\"\n                    if (game.isInsufficientMaterial()) {\n                    } else if (game.isStalemate()) {\n                    } else if (game.isThreefoldRepetition()) {\n                    }\n                    socket.emit(\"game_over\", { to: id, gameResult })\n                }\n                console.log(\"game over\")\n\n                // send gameResult through \"game_over\"\n\n                // update game table\n                addGame()\n            }\n\n            // TODO: sync time\n        })\n\n        socket.on(\"game_over\", (data) => {\n            console.log(\"Game over!\", data)\n        })\n\n        function convertTimeToString(time) {\n            var time_ = time.toString()\n            if (time < 10) time_ = \"0\" + time_\n\n            return time_\n        }\n\n        const interval = setInterval(() => {\n            // assuming I am white\n            const blackTime =\n                convertTimeToString(myTimer.current.getMinutes()) +\n                \":\" +\n                convertTimeToString(myTimer.current.getSeconds())\n            setOpponentTimeInfo(blackTime)\n\n            const opponentTime =\n                convertTimeToString(opponentTimer.current.getMinutes()) +\n                \":\" +\n                convertTimeToString(opponentTimer.current.getSeconds())\n            setMyTimeInfo(opponentTime)\n        }, 500)\n\n        return () => {\n            socket.off(\"send_move\")\n            clearInterval(interval)\n        }\n    }, [])\n\n    function sendMove(move) {\n        console.log(\"Sending Move\", move)\n        socket.emit(\"send_move\", { to: id, move })\n    }\n\n    function onDrop(sourceSquare, targetSquare) {\n        if (game.turn() !== boardOrientation[0]) {\n            console.log(\"Not your turn!\")\n            return\n        }\n\n        var move = { from: sourceSquare, to: targetSquare }\n        var result = game.move(move)\n\n        if (result == null) {\n            move = { from: sourceSquare, to: targetSquare, promotion: \"q\" }\n            result = game.move(move)\n\n            if (result == null) {\n                console.log(\"Invalid move\")\n                return\n            }\n        }\n        // if valid move\n\n        playMoveSfx()\n\n        if (game.isGameOver()) {\n            // TODO: create a gameResult to send to opponent\n            var gameResult = \"\"\n            if (game.isCheckmate()) {\n                if (game.inCheck() && game.turn() === boardOrientation) {\n                    // player lost, opponent won\n                    gameResult += game.turn() + \" lost\"\n                } else {\n                    const opponent = game.turn() === \"w\" ? \"b\" : \"w\"\n                    gameResult += opponent + \" lost\"\n                }\n            } else if (game.isDraw()) {\n                gameResult += \"game drawn\"\n                if (game.isInsufficientMaterial()) {\n                } else if (game.isStalemate()) {\n                } else if (game.isThreefoldRepetition()) {\n                }\n            }\n            socket.emit(\"game_over\", { to: id, gameResult })\n            console.log(\"game over\")\n\n            // send gameResult through \"game_over\"\n        }\n\n        myTimer.current.startTimer()\n        opponentTimer.current.stopTimer()\n\n        setPgnMoves(parsePgn(game.pgn()))\n        console.log(parsePgn(game.pgn()))\n\n        setPosition(game.fen())\n        sendMove(move)\n    }\n\n    function onSquareClick(square) {\n        console.log(square)\n    }\n\n    return (\n        <Grid\n            container\n            sx={{ mt: 5 }}\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            spacing={3}\n        >\n            <Grid item>\n                <Chessboard\n                    id=\"BasicBoard\"\n                    showBoardNotation=\"true\"\n                    position={position}\n                    onPieceDrop={onDrop}\n                    boardOrientation={boardOrientation}\n                    arePremovesAllowed=\"true\"\n                    clearPremovesOnRightClick=\"true\"\n                    onSquareClick={onSquareClick}\n                    boardWidth=\"720\"\n                />\n            </Grid>\n            <Grid item>\n                <GameInfo\n                    opponentUsername={opponentUsername}\n                    myUsername={myUsername}\n                    opponentTimeInfo={opponentTimeInfo}\n                    myTimeInfo={myTimeInfo}\n                    pgnMoves={pgnMoves}\n                    mySide={boardOrientation[0]}\n                    turn={game.turn()}\n                />\n            </Grid>\n            <Timer\n                initialMinute={5}\n                initialSeconds={0}\n                isTicking={0}\n                ref={opponentTimer}\n            />\n            <Timer\n                initialMinute={5}\n                initialSeconds={0}\n                isTicking={0}\n                ref={myTimer}\n            />\n        </Grid>\n    )\n}\n\nexport default Board\n","import { Box, Button, NativeSelect } from \"@mui/material\"\nimport { useContext, useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { AppContext } from \"../App.js\"\n\nexport const Chat = (props) => {\n    const { initSocket, socket, updateUserList, userList, userId } =\n        useContext(AppContext)\n    const { name } = props\n    const history = useHistory()\n\n    const [receiver, setReceiver] = useState({})\n    const [myColor, setMyColor] = useState(0)\n    // 1 is black\n\n    useEffect(() => {\n        socket.on(\"Challenge\", (data) => {\n            history.push(\"/play/\" + data.from + \"/\" + data.yourcolor)\n            console.log(\"Got Challange\")\n        })\n\n        return () => {\n            socket.off(\"Challenge\")\n        }\n    }, [])\n\n    const handleReceiverChange = (e) => {\n        e.preventDefault()\n        const selectedIndex = e.target.options.selectedIndex\n        const id = e.target.options[selectedIndex].getAttribute(\"id\")\n        setReceiver({ id, name: e.target.value })\n    }\n\n    const Challenge = (e) => {\n        console.log(\"Sending challenge\")\n        e.preventDefault()\n        socket.emit(\"Challenge\", {\n            to: receiver.id,\n            msg: \"challenge\",\n            yourcolor: myColor == 1 ? 0 : 1,\n        })\n        history.push(\"/play/\" + receiver.id + \"/\" + myColor)\n    }\n\n    return (\n        <Box component=\"form\" noValidate onSubmit={Challenge} sx={{ mt: 3 }}>\n            <NativeSelect\n                name=\"Receiver\"\n                onChange={handleReceiverChange}\n                onMouseOver={() => {\n                    initSocket({ name, userId })\n                    updateUserList()\n                }}\n            >\n                <option value=\"Select Receiver\">Select Receiver</option>\n                {userList &&\n                    userList.map((user) => {\n                        if (user.name === name) {\n                            return \"\"\n                        }\n                        return (\n                            <option\n                                key={user.id}\n                                id={user.id}\n                                value={user.name}\n                            >\n                                {user.name + \"--\" + user.userId}\n                            </option>\n                        )\n                    })}\n            </NativeSelect>\n            <Button type=\"submit\">Challenge</Button>\n        </Box>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect, useContext } from \"react\"\nimport axios from \"axios\"\nimport jwt_decode from \"jwt-decode\"\nimport { useHistory } from \"react-router-dom\"\nimport { AppContext } from \"../App.js\"\nimport { Chat } from \"./Chat.js\"\nimport {\n    Table,\n    Button,\n    Typography,\n    Container,\n    CssBaseline,\n    TableContainer,\n    Paper,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n} from \"@mui/material\"\n\nconst Dashboard = () => {\n    const { userId, setUserId } = useContext(AppContext)\n    const [name, setName] = useState(\"\")\n\n    const [token, setToken] = useState(\"\")\n    const [expire, setExpire] = useState(\"\")\n    const [users, setUsers] = useState([])\n    const history = useHistory()\n\n    const { initSocket, updateUserList } = useContext(AppContext)\n\n    useEffect(() => {\n        refreshToken()\n        getUsers()\n        const interval = setInterval(() => {\n            updateUserList()\n        }, 2000)\n\n        return () => {\n            clearInterval(interval)\n        }\n    }, [])\n\n    useEffect(() => {\n        initSocket({ name, userId })\n        updateUserList()\n    }, [userId, name])\n\n    const refreshToken = async () => {\n        try {\n            const response = await axios.get(\n                `${process.env.REACT_APP_BACKEND_URL}/api/token`\n            )\n            setToken(response.data.accessToken)\n            const decoded = jwt_decode(response.data.accessToken)\n            setName(decoded.name)\n            setUserId(decoded.id)\n            setExpire(decoded.exp)\n        } catch (error) {\n            if (error.response) {\n                history.push(\"/\")\n            }\n        }\n    }\n\n    const axiosJWT = axios.create()\n\n    axiosJWT.interceptors.request.use(\n        async (config) => {\n            const currentDate = new Date()\n            if (expire * 1000 < currentDate.getTime()) {\n                const response = await axios.get(\n                    `${process.env.REACT_APP_BACKEND_URL}/api/token`\n                )\n                config.headers.Authorization = `Bearer ${response.data.accessToken}`\n                setToken(response.data.accessToken)\n                const decoded = jwt_decode(response.data.accessToken)\n                setName(decoded.name)\n                setExpire(decoded.exp)\n            }\n            return config\n        },\n        (error) => {\n            return Promise.reject(error)\n        }\n    )\n\n    const getUsers = async () => {\n        const response = await axiosJWT.get(\n            `${process.env.REACT_APP_BACKEND_URL}/api/users`,\n            {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            }\n        )\n        setUsers(response.data)\n        initSocket({ name, userId })\n    }\n\n    return (\n        <Container component=\"main\" alignItems=\"center\">\n            <CssBaseline />\n            <Typography component=\"h1\" variant=\"h5\" sx={{ mt: 1 }}>\n                Welcome Back: {name}\n            </Typography>\n            <Button\n                size=\"large\"\n                sx={{ mt: 3, mb: 2 }}\n                onClick={getUsers}\n                variant=\"contained\"\n                alignItems=\"center\"\n            >\n                Refresh\n            </Button>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>No</TableCell>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Email</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {users.map((user, index) => (\n                            <TableRow\n                                key={user.id}\n                                sx={{\n                                    \"&:last-child td, &:last-child th\": {\n                                        border: 0,\n                                    },\n                                }}\n                            >\n                                <TableCell>{index + 1}</TableCell>\n                                <TableCell>{user.name}</TableCell>\n                                <TableCell>{user.email}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Chat name={name} />\n        </Container>\n    )\n}\n\nexport default Dashboard\n","import React, { useContext } from \"react\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport { AppContext } from \"../App.js\"\nimport { AppBar, Toolbar, IconButton, Typography, Button } from \"@mui/material\"\n\nconst Navbar = () => {\n    const { socket } = useContext(AppContext)\n    const history = useHistory()\n\n    const Logout = async () => {\n        try {\n            await axios.delete(\n                `${process.env.REACT_APP_BACKEND_URL}/api/logout`\n            )\n            history.push(\"/\")\n            socket.disconnect()\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\">\n                    <Button\n                        variant=\"outlined\"\n                        sx={{ marginLeft: \"auto\" }}\n                        onClick={Logout}\n                    >\n                        Log Out\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Navbar\n","import React, { useLayoutEffect } from \"react\"\n// import Children from \"react-children-utilities\";\nimport * as uuid from \"uuid\"\nimport { pgnView } from \"@mliebelt/pgn-viewer\"\n\nfunction PgnViewer(props) {\n    // const gameDecription = Children.onlyText(props.children);\n    const id = \"board-\" + uuid.v4()\n\n    const pgn = `\n  1. d4 d5 2. Nc3 Nc6 3. Nxd5 Nxd4\n  `\n\n    useLayoutEffect(() => {\n        pgnView(id, {\n            pgn: pgn,\n            timerTime: 1,\n            locale: \"en\",\n            startPlay: 1,\n            showResult: true,\n            boardSize: \"650\",\n            showFen: true,\n            pieceStyle: \"merida\",\n            resizable: true,\n        })\n    })\n\n    return <div className=\"pgnviewer\" id={id}></div>\n}\n\nexport default PgnViewer\n","export default __webpack_public_path__ + \"static/media/lightchess_logo_blue.a33aa897.png\";","import { useState } from \"react\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport Button from \"@mui/material/Button\"\nimport CssBaseline from \"@mui/material/CssBaseline\"\nimport TextField from \"@mui/material/TextField\"\nimport Link from \"@mui/material/Link\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport Container from \"@mui/material/Container\"\nimport lightchess_logo_blue from \"./static/images/lightchess_logo_blue.png\"\n\nfunction Copyright(props) {\n    return (\n        <Typography\n            variant=\"body2\"\n            color=\"text.secondary\"\n            align=\"center\"\n            {...props}\n        >\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://github.com/l1ghtweight/\">\n                Lightweight\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n        </Typography>\n    )\n}\n\nconst SignIn = () => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [msg, setMsg] = useState(\"\")\n    const history = useHistory()\n\n    const Auth = async (e) => {\n        e.preventDefault()\n        try {\n            await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/login`, {\n                email: email,\n                password: password,\n            })\n            history.push(\"/dashboard\")\n        } catch (error) {\n            if (error.response) {\n                setMsg(error.response.data.msg)\n            }\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                }}\n            >\n                <img\n                    style={{ width: 150, height: 150 }}\n                    src={lightchess_logo_blue}\n                    alt=\"lightchess-logo\"\n                />\n                <Typography component=\"h1\" variant=\"h5\" sx={{ mt: 1 }}>\n                    Sign in\n                </Typography>\n                <Box component=\"form\" onSubmit={Auth} noValidate sx={{ mt: 1 }}>\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        onChange={(e) => setEmail(e.target.value)}\n                        autoFocus\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                        autoComplete=\"current-password\"\n                    />\n                    {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"register\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n                <Link\n                    href={\n                        process.env.REACT_APP_BACKEND_URL +\n                        \"/api/login/federated/google\"\n                    }\n                    variant=\"body2\"\n                    sx={{ mt: 2 }}\n                >\n                    {\"Login with Google\"}\n                </Link>\n            </Box>\n            <Copyright sx={{ mt: 8, mb: 4 }} />\n        </Container>\n    )\n}\n\nexport default SignIn\n","import { useState } from \"react\"\nimport axios from \"axios\"\nimport { useHistory } from \"react-router-dom\"\nimport Button from \"@mui/material/Button\"\nimport CssBaseline from \"@mui/material/CssBaseline\"\nimport TextField from \"@mui/material/TextField\"\nimport Link from \"@mui/material/Link\"\nimport Grid from \"@mui/material/Grid\"\nimport Box from \"@mui/material/Box\"\nimport Typography from \"@mui/material/Typography\"\nimport Container from \"@mui/material/Container\"\nimport lightchess_logo_blue from \"./static/images/lightchess_logo_blue.png\"\n\nfunction Copyright(props) {\n    return (\n        <Typography\n            variant=\"body2\"\n            color=\"text.secondary\"\n            align=\"center\"\n            {...props}\n        >\n            {\"Copyright © \"}\n            <Link color=\"inherit\" href=\"https://github.com/l1ghtweight/\">\n                Lightweight\n            </Link>{\" \"}\n            {new Date().getFullYear()}\n            {\".\"}\n        </Typography>\n    )\n}\n\nconst SignUp = () => {\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confPassword, setConfPassword] = useState(\"\")\n    const [msg, setMsg] = useState(\"\")\n    const history = useHistory()\n\n    const SignUp = async (e) => {\n        e.preventDefault()\n        try {\n            await axios.post(\n                `${process.env.REACT_APP_BACKEND_URL}/api/register`,\n                {\n                    name,\n                    email,\n                    password,\n                    confPassword,\n                }\n            )\n            history.push(\"/\")\n        } catch (error) {\n            if (error.response) {\n                setMsg(error.response.data.msg)\n            }\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                }}\n            >\n                <img\n                    style={{ width: 150, height: 150 }}\n                    src={lightchess_logo_blue}\n                    alt=\"lightchess-logo\"\n                />\n                <Typography component=\"h1\" variant=\"h5\" sx={{ mt: 1 }}>\n                    Sign up\n                </Typography>\n                <Box\n                    component=\"form\"\n                    noValidate\n                    onSubmit={SignUp}\n                    sx={{ mt: 3 }}\n                >\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"given-name\"\n                                name=\"Name\"\n                                required\n                                fullWidth\n                                id=\"Name\"\n                                label=\"Name\"\n                                autoFocus\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"new-password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                name=\"confirm-password\"\n                                label=\"Confirm Password\"\n                                type=\"password\"\n                                id=\"confirm-password\"\n                                autoComplete=\"Confirm-password\"\n                                onChange={(e) =>\n                                    setConfPassword(e.target.value)\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justifyContent=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"login\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Box>\n            <Copyright sx={{ mt: 5 }} />\n        </Container>\n    )\n}\n\nexport default SignUp\n","import { createTheme } from '@mui/material';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nexport default theme;\n  ","import CssBaseline from \"@mui/material/CssBaseline\"\nimport { ThemeProvider } from \"@mui/material/styles\"\nimport React, { useState } from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport { io } from \"socket.io-client\"\nimport Board from \"./components/Chessboard\"\nimport Dashboard from \"./components/Dashboard\"\nimport Navbar from \"./components/Navbar\"\nimport PgnViewer from \"./components/PgnViewer\"\nimport SignIn from \"./components/SignIn\"\nimport SignUp from \"./components/SignUp\"\nimport theme from \"./theme\"\n\nexport const AppContext = React.createContext()\n\nconst socket = io(process.env.REACT_APP_WEB_SOCKET_URL, {\n    autoConnect: false,\n})\n\nconst initSocket = (args) => {\n    const { name, userId } = args\n    if (socket.connected === true || name === \"\") return\n    socket.connect()\n    /* console.log(\"Inited socket with\", name, socket.id) */\n    socket.emit(\"initSocket\", { name, userId }, (response) => {\n        console.log(response)\n    })\n}\n\nfunction App() {\n    const [userMap, setUserMap] = useState(new Map())\n    const [userList, setUserList] = useState([])\n    const [userId, setUserId] = useState(-1)\n\n    const updateUserList = () => {\n        socket.emit(\"getusers\", \"args\", (usermap) => {\n            let newUserMap = new Map(Object.entries(usermap))\n            let users = []\n            newUserMap.forEach((value, key) => {\n                users.push({ id: key, name: value.name, userId: value.userId })\n            })\n            setUserMap(newUserMap)\n            setUserList([...users])\n        })\n    }\n\n    return (\n        <AppContext.Provider\n            value={{\n                userMap,\n                userList,\n                updateUserList,\n                socket,\n                initSocket,\n                userId,\n                setUserId,\n            }}\n        >\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <SignIn />\n                        </Route>\n                        <Route exact path=\"/login\">\n                            <SignIn />\n                        </Route>\n                        <Route path=\"/register\">\n                            <SignUp />\n                        </Route>\n                        <Route path=\"/dashboard\">\n                            <Navbar />\n                            <Dashboard />\n                        </Route>\n                        <Route path=\"/pgnviewer\">\n                            <Navbar />\n                            <PgnViewer />\n                        </Route>\n                        <Route path=\"/play/:id/:mycolor\">\n                            <Navbar />\n                            <Board />\n                        </Route>\n                        <Route path=\"/play\">\n                            <Navbar />\n                            <Board />\n                        </Route>\n                    </Switch>\n                </BrowserRouter>\n            </ThemeProvider>\n        </AppContext.Provider>\n    )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}